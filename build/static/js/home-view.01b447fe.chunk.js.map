{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Button/Button.module.css","components/ContactForm/ContactForm.module.css","components/Message/Message.module.css","components/PageHeading/PageHeading.module.css","views/HomePage/HomePage.module.css","components/Filter /Filter.module.css","components/PageHeading/PageHeading.js","components/ContactList/ContactList.js","components/Message/Message.js","components/ContactForm/ContactForm.js","components/Filter /Filter.js","views/HomePage/HomePage.js"],"names":["module","exports","PageHeading","text","className","styles","title","getchangeFilter","allContacts","filter","normalizedFilter","toLowerCase","name","includes","connect","contacts","items","dispatch","onDelete","id","todosActions","deleteTodo","Container","TransitionGroup","component","s","List","map","number","CSSTransition","classNames","timeout","contact","b","Button","type","onClick","Message","message","StyleMessage","in","appear","unmountOnExit","ContactForm","state","errorMessage","event","setState","setTimeout","handleInputChange","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","trim","find","item","this","Form","q","Input","placeholder","onChange","Component","defaultProps","addTodo","changeFilter","target","HomePage","error","resetError","stylesHomePage","onSubmitContact","onResetError","StyleFilter","length"],"mappings":"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","file":"static/js/home-view.01b447fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__20gyh\",\"enter\":\"ContactList_enter__1Tfxs\",\"enterActive\":\"ContactList_enterActive__BPn6N\",\"exit\":\"ContactList_exit__3MW4R\",\"exitActive\":\"ContactList_exitActive__ZA3FS\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__2jrAg\",\"Input\":\"ContactForm_Input__HKadG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__kVpdt\",\"enter\":\"Message_enter__3aW7_\",\"enterActive\":\"Message_enterActive__3ngpY\",\"exit\":\"Message_exit__Ynmld\",\"exitActive\":\"Message_exitActive__10mkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__1ffyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"HomePage_appear___4y8l\",\"appearActive\":\"HomePage_appearActive__38yCa\",\"position\":\"HomePage_position__3J9te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__29y5T\",\"enterActive\":\"Filter_enterActive__1ekdR\",\"exit\":\"Filter_exit__2A3T0\",\"exitActive\":\"Filter_exitActive__1YnI6\"};","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return  <h1 className={styles.title}>{text}</h1>\n  ;\n}","import React from 'react';\nimport s from \"./ContactList.module.css\";\nimport b from '../Button/Button.module.css';\nimport Container from \"../Container\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport todosActions from '../../components/redux/todos/todos-actions'\n\n\n//import Button from '../Button';\n\nconst ContactList = ({ contacts, onDelete}) =>(\n\n    \n    <Container>\n   \n                  <TransitionGroup component=\"ul\" className={s.List} >\n              \n            {contacts.map(({ id, name, number }) =>\n                <CSSTransition key={id} classNames={s} timeout={250}>\n                <li className={s.contact} key={id} ><span>{name}: {number} </span>\n                  <button className={b.Button} type=\"button\" onClick={() => onDelete(id)} >Delete</button>\n                </li>\n                 </CSSTransition>\n            )}           \n           \n            </TransitionGroup>\n          \n             \n  </Container>);\n\n    \nconst  getchangeFilter = ( allContacts, filter) => {\n \nconst normalizedFilter = filter.toLowerCase();\n\nreturn allContacts.filter(({ name }) =>\n  name.toLowerCase().includes(normalizedFilter),  \n)};\n \nconst mapStateToProps = ({contacts:{items,filter}}) => ({\n contacts: getchangeFilter(items,filter),\n \n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id =>dispatch(todosActions.deleteTodo(id)),\n});\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList); \n\n\n\n","import React from 'react';\nimport styles from './Message.module.css';\nimport {CSSTransition} from \"react-transition-group\";\nimport StyleMessage from '../../components/Message/Message.module.css'; \nimport PropTypes from 'prop-types';\n\nconst Message=({ message }) =>{\n  return (\n  <CSSTransition classNames={StyleMessage}  in={message} appear  timeout={250} unmountOnExit>\n  <div className={styles.message}><p >{message}</p></div> \n    </CSSTransition>  \n  )\n}\n \n Message.propTypes={\n   message:PropTypes.string,\n   };\n \n export default Message;","\nimport React, { Component } from 'react';\nimport Container from \"../Container\";\n//import 'react-native-get-random-values';\n//import Button from \"../Button\";\nimport b from \"../Button/Button.module.css\";\nimport s from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport todosActions from '../redux/todos/todos-actions';\nimport q from '../ContactList/ContactList.module.css';\nimport Message from '../../components/Message';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n    \n    static defaultProps = {\n    //  \n  }\n  static propTypes = {\n   contacts:PropTypes.arrayOf(PropTypes.object),\n   onSubmit:PropTypes.func,\n  }\n\n    state = {\n        name: '',\n        number: '',\n        message:null,\n    }\n   \n// handleInputChange=e=>{\n//     this.setState({name:e.currentTarget.value},{number:e.currentTarget.value})\n// };\nerrorMessage=(event)=>{\n    this.setState({message:event});\n    setTimeout(() => {\n      this.setState({message:null})  \n    }, 2500);\n}\n\n    handleInputChange = event => {\n        const {name, value}= event.currentTarget;\n        this.setState({[name]:value})\n    };\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const {name,number}=this.state;\n        const {onSubmit, contacts}=this.props;\n\n        if (name.trim() ===''){\n            this.errorMessage('Введите имя контакта')\n        return;\n        }          \n       if(number.trim() ===''  ){\n            this.errorMessage('Введите номер контакта')\n        return;\n         }\n        if (contacts.find( item => item.name.toLowerCase() === name.toLowerCase())){\n           this.errorMessage('Контакт существует')\n        return;  \n        }\n         onSubmit(name, number);\n\n         this.setState({\n            name: '',\n            number: ''\n        })\n    };\n    \n    \n    render(){ \n    \n        const { name, number,message } = this.state;\n\n        return (\n            \n        <Container>\n          \n          <Message message={message}/>\n        \n            <form className={s.Form} onSubmit={this.handleSubmit}>\n                <label className={q.contact}>\n                  Name <br/> <input className={s.Input} type=\"text\" name=\"name\" value={name}  placeholder='Name Surname' onChange={this.handleInputChange }/>\n                </label>\n                <br/>\n                <label className={q.contact}>\n                  Number <br/> <input className={s.Input} type=\"tel\" name=\"number\" value={number} placeholder='+38 ( 000 ) 000 - 00 - 00' onChange={this.handleInputChange}/>\n                </label>\n                <br/>\n                {/* <Button type=\"submit\" >Add contact</Button> */}\n                <button className={b.Button} type='submit'>Add contact</button>\n       \n            </form>\n            \n       </Container>\n        )\n    }      \n};\n const mapStateToProps = (state) => ({\n contacts: state.contacts.items,\n});\nconst mapDispatchToProps = dispatch => ({\n\n    onSubmit:  (name,number) => dispatch(todosActions.addTodo (name,number)),\n})\n\nexport default connect( mapStateToProps,mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport Container from \"../Container\";\nimport { connect } from \"react-redux\";\nimport todosActions from '../redux/todos/todos-actions'\nimport s from \"../ContactForm/ContactForm.module.css\";\nimport q from '../ContactList/ContactList.module.css';\nconst Filter = ({ value, onChange }) => \n<Container>\n    <label className={q.contact}>\n        Find contacts by name <br/>\n        <input className={s.Input} value={value} type=\"text\" placeholder='Name or Surname' onChange={onChange} />\n    </label> \n</Container>;\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter,\n})\nconst mapDispatchToProps =dispatch=> ({\nonChange: event=>dispatch(todosActions.changeFilter(event.target.value))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","import React, {Component} from 'react'\nimport PageHeading from '../../components/PageHeading';\nimport ContactList from '../../components/ContactList';\nimport s from '../../components/ContactList/ContactList.module.css';\nimport ContactForm from '../../components/ContactForm';\nimport {CSSTransition} from \"react-transition-group\";\nimport stylesHomePage from \"./HomePage.module.css\";\nimport Filter from '../../components/Filter ';\nimport StyleFilter from '../../components/Filter /Filter.module.css';\nimport { connect } from \"react-redux\";\n\nclass HomePage extends Component {\n\n  static defaultProps = {\n    //   \n  }\n  static propTypes = {\n   //\n  }\n  state = {\n    error: false,\n    message:'',\n  };\n\n\n   handleSubmit = () => {\n         this.setState({error:true})\n    };\n  resetError=()=>{\n    this.setState({error:false})\n  };\n  \n  render() {\n         //const filterResult = this.getchangeFilter();\n         const { message, error} = this.state;\n     \n    return (\n          <div >\n\n        \n          <CSSTransition classNames={stylesHomePage}  in={true} appear  timeout={500} unmountOnExit>\n          <PageHeading text=\"Phonebook\" />\n          </CSSTransition>\n          <ContactForm onSubmitContact={()=>{this.handleSubmit(this.state.message)}} onResetError={()=>{this.resetError()}}/>\n          <h2 className={s.contact}>Contacts</h2>\n          <CSSTransition classNames={StyleFilter} in={this.props.contacts.length >1}\n            timeout={250} unmountOnExit > \n          <Filter /> \n          </CSSTransition> \n          <ContactList /> \n\n          </div>  \n    ) \n  }\n}\nconst mapStateToProps = (state) => ({\n contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps, null) (HomePage);\n\n    \n//   addContact = ({name,number}) => {\n//     console.log({name,number});\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number\n//     }\n//       this.setState({\n//           error: false\n//       });\n\n//     if(this.state.contacts.find(item=>item.name === name)){\n//         this.setState({\n//             error: true\n//         })\n//         return;\n//       };\n//       this.setState(({ contacts }) => ({\n//           contacts: [contact, ...contacts]\n//       }));\n//   };\n  \n  //   deleteContact = contactID => {\n  //     this.setState({\n  //         error: false\n  //     });\n  //   this.setState(prevState => ({\n  //     contacts:prevState.contacts.filter(contact => contact.id !== contactID),\n  //   }));\n  //   };\n \n  //   changeFilter = (event) => {\n  //     this.setState({\n  //         error: false\n  //     });\n  //   this.setState({ filter: event.currentTarget.value });\n  // };\n\n  //   getchangeFilter = () => {\n      \n  //   const { contacts, filter } = this.state;\n  //   const normalizeFilter = filter.toLocaleLowerCase();\n  //   return (contacts.filter(contact => contact.name.toLocaleLowerCase().includes(normalizeFilter)));\n  // };\n"],"sourceRoot":""}